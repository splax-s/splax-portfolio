'use client';

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import Image from 'next/image';
import { useOsStore } from '@/store/useOsStore';

const WindowsDesktop: React.FC = () => {
  const { windows, toggleApp } = useOsStore();
  const [isStartOpen, setIsStartOpen] = useState(false);
  const [currentTime, setCurrentTime] = useState(new Date());
  
  // Update time every minute
  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentTime(new Date());
    }, 60000);
    
    return () => clearInterval(timer);
  }, []);
  
  const formattedTime = currentTime.toLocaleTimeString([], {
    hour: 'numeric',
    minute: '2-digit',
    hour12: true
  });
  
  const currentDate = currentTime.toLocaleDateString('en-US', {
    month: 'short',
    day: 'numeric',
    year: 'numeric'
  });

  return (
    <div className="relative w-full h-full bg-cover bg-center"
         style={{ backgroundImage: 'url(/backgrounds/new-windows-background.svg)' }}>
      {/* Desktop Icons */}
      <div className="grid grid-cols-1 gap-6 p-4">
        {windows.map((app) => (
          <motion.button
            key={app.id}
            onClick={() => toggleApp(app.id)}
            className="flex flex-col items-center space-y-1 p-2 rounded-lg hover:bg-white/10"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.1 * Array.from(windows).indexOf(app), duration: 0.3 }}
          >
            <Image
              src={app.icon}
              alt={app.title}
              width={48}
              height={48}
              className="w-12 h-12"
            />
            <span className="text-white text-sm font-medium text-shadow">{app.title}</span>
          </motion.button>
        ))}
      </div>

      {/* Taskbar */}
      <div className="absolute bottom-0 left-0 right-0 h-12 bg-gray-900/80 backdrop-blur-md flex items-center px-4">
        <div className="flex items-center space-x-2 flex-1">
          {/* Start Button */}
          <motion.button
            className="p-2 rounded-lg hover:bg-white/10"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => setIsStartOpen(!isStartOpen)}
          >
            <svg className="w-6 h-6 text-white" viewBox="0 0 24 24" fill="currentColor">
              <path d="M3 3H11V11H3V3M3 13H11V21H3V13M13 3H21V11H13V3M13 13H21V21H13V13Z" />
            </svg>
          </motion.button>

          {/* Search */}
          <div className="flex items-center bg-white/10 rounded-lg px-4 py-1.5">
            <svg className="w-4 h-4 text-white mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            <span className="text-white/60 text-sm">Type here to search</span>
          </div>

          {/* Running Apps */}
          <div className="flex space-x-1">
            {windows.filter(w => w.isOpen).map((app) => (
              <motion.button
                key={`taskbar-${app.id}`}
                className={`p-2 rounded-md ${app.isFocused ? 'bg-white/20' : 'hover:bg-white/10'}`}
                onClick={() => toggleApp(app.id)}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                <Image src={app.icon} alt={app.title} width={24} height={24} />
              </motion.button>
            ))}
          </div>
        </div>

        {/* System Tray */}
        <div className="flex items-center space-x-4 text-white">
          <div className="flex items-center space-x-2">
            <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0" />
            </svg>
            <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 10.013V14c0 4-2 6-6 6h-6c-4 0-6-2-6-6V10" />
            </svg>
          </div>
          <div className="text-sm">{formattedTime}</div>
          <div className="text-sm">{currentDate}</div>
        </div>
      </div>

      {/* Start Menu */}
      <AnimatePresence>
        {isStartOpen && (
          <motion.div
            className="absolute bottom-12 left-0 w-80 bg-blue-900/90 backdrop-blur-md rounded-tr-lg shadow-lg flex flex-col text-white z-20"
            initial={{ y: 20, opacity: 0 }}
            animate={{ y: 0, opacity: 1 }}
            exit={{ y: 20, opacity: 0 }}
            transition={{ duration: 0.2 }}
          >
            <div className="p-4 border-b border-blue-800">
              <h3 className="text-lg font-medium">Portfolio OS</h3>
              <p className="text-sm opacity-80">Windows Edition</p>
            </div>
            
            <div className="p-3">
              <div className="grid grid-cols-2 gap-2">
                {windows.map((app) => (
                  <motion.button
                    key={`start-${app.id}`}
                    className="flex items-center p-2 rounded hover:bg-blue-800 transition-colors"
                    onClick={() => {
                      toggleApp(app.id);
                      setIsStartOpen(false);
                    }}
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                  >
                    <Image src={app.icon} alt={app.title} width={24} height={24} className="mr-3" />
                    <span>{app.title}</span>
                  </motion.button>
                ))}
              </div>
            </div>

            <div className="mt-auto p-4 border-t border-blue-800">
              <div className="flex items-center hover:bg-blue-800 p-2 rounded transition-colors" onClick={() => setIsStartOpen(false)}>
                <svg className="w-5 h-5 mr-3" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M13,3H11V13H13V3M13,17H11V21H13V17Z" />
                </svg>
                <span>Close</span>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
};

export default WindowsDesktop;
